name: Auto compile with OpenWrt SDK

on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      upload-artifacts:
        description: "Upload compiled image to Artifacts only"
        required: false
        default: false
        type: boolean
      upload-prerelease:
        description: "Upload as pre-release"
        required: false
        default: false
        type: boolean

jobs:
  build:
    name: Build RTA
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential libncurses-dev git-core subversion gettext unzip zlib1g-dev file perl libssl-dev wget

      - name: Download and prepare SDK
        run: |
          wget -O sdk.tar.xz https://archive.openwrt.org/releases/21.02.5/targets/x86/64/openwrt-sdk-21.02.5-x86-64_gcc-8.4.0_musl.Linux-x86_64.tar.xz
          mkdir -p sdk && tar -xJf sdk.tar.xz -C sdk --strip-components=1
          cd sdk
          echo "src-git base https://github.com/openwrt/openwrt.git;openwrt-21.02" > feeds.conf
          echo "src-git-full packages https://github.com/openwrt/packages.git;openwrt-21.02" >> feeds.conf
          echo "src-git-full luci https://git.openwrt.org/project/luci.git;openwrt-21.02" >> feeds.conf
          echo "src-git-full routing https://git.openwrt.org/feed/routing.git;openwrt-21.02"  >> feeds.conf
          git clone https://github.com/${{ github.repository }}.git package/downloads
          ./scripts/feeds update -a
          packages=(
            "luci-app-base64" 
            "luci-app-libernet" 
            "luci-app-libernet-bin" 
            "luci-app-libernet-plus" 
            "luci-app-mikhmon" 
            "luci-app-mikhmon4" 
            "luci-app-netmonitor" 
            "luci-app-wegare" 
            "luci-app-xderm" 
            "luci-app-xderm-bin" 
            "luci-app-xderm-limit"
          )
          for package in "${packages[@]}"; do
            ./scripts/feeds install -d n "$package"
          done
          make defconfig

      - name: Compile RTA
        run: |
          cd sdk
          for package in "${packages[@]}"; do
            make "package/$package/compile"
          done
          mv bin/packages/x86_64/base/ ../
          echo "status=success" >> $GITHUB_OUTPUT
          echo "FIRMWARE=$PWD" >> $GITHUB_ENV
          echo "DATETIME=$(date +'%Y.%m.%d-%H:%M:%S')" >> $GITHUB_ENV

      - name: Upload All Firmware to Artifacts
        if: github.event.inputs.upload-artifacts == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: OpenWrt RTA Packages
          path: ${{ env.FIRMWARE }}/base/*.ipk
  
      - name: Upload Firmware to Release
        uses: svenstaro/upload-release-action@v2
        if: github.event.inputs.upload-artifacts == 'false'
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file_glob: true
          file: ${{ env.FIRMWARE }}/base/*.ipk
          asset_name: ${{ github.event.repository.name }}-${{ github.sha }}
          tag: latest
          release_name: OpenWrt RTA Packages
          overwrite: true
          prerelease: ${{ inputs.upload-prerelease }}
          body: |
            Build date: ${{ env.DATETIME }}
      
      - name: Delete workflow runs
        uses: Mattraks/delete-workflow-runs@v2.0.3
        with:
          token: ${{ github.token }}
          repository: ${{ github.repository }}
          retain_days: 1
          keep_minimum_runs: 0
